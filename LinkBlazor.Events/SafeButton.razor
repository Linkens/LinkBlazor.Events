@using Microsoft.AspNetCore.Components.Web

<button @attributes="@CapturedAttributes" @onclick=OnClick>
    @ChildContent
</button>
@code {
    [Parameter] public Action? Action { get; set; }
    [Parameter] public Func<Task>? Task { get; set; }
    [Parameter] public bool WaitForExecution { get; set; } = false;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (!CapturedAttributes.ContainsKey("class"))
        {
            CapturedAttributes.Add("class", "btn btn-primary");
        }
        await base.OnInitializedAsync();
    }

    protected bool _Busy;
    protected async void OnClick(MouseEventArgs e)
    {

        if (e.Button != 0 || e.Detail > 1 || (WaitForExecution && _Busy))
            return;
        _Busy = true;
        if (Action != null)
            Action.Invoke();
        else if (Task != null)
            await Task.Invoke();
        _Busy = false;
    }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> CapturedAttributes { get; set; } = [];
}
